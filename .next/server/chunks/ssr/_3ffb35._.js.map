{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/kasinadhsarma/dr-detection/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\n\ninterface TooltipProps {\n  children: React.ReactNode;\n  tooltip: string;\n  position?: 'top' | 'bottom' | 'left' | 'right';\n  delay?: number;\n}\n\nexport function Tooltip({ \n  children, \n  tooltip, \n  position = 'top',\n  delay = 0 \n}: TooltipProps) {\n  const [isVisible, setIsVisible] = React.useState<boolean>(false);\n  const timeoutRef = React.useRef<NodeJS.Timeout | undefined>(undefined);\n\n  const positionClasses = {\n    top: 'bottom-full left-1/2 -translate-x-1/2 mb-2',\n    bottom: 'top-full left-1/2 -translate-x-1/2 mt-2',\n    left: 'right-full top-1/2 -translate-y-1/2 mr-2',\n    right: 'left-full top-1/2 -translate-y-1/2 ml-2'\n  };\n\n  const handleMouseEnter = () => {\n    if (delay) {\n      timeoutRef.current = setTimeout(() => setIsVisible(true), delay);\n    } else {\n      setIsVisible(true);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setIsVisible(false);\n  };\n\n  React.useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div \n      className=\"relative inline-flex items-center\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {children}\n      {isVisible && (\n        <div \n          className={`\n            absolute z-50 px-2 py-1 text-xs\n            bg-gray-900 text-white rounded\n            whitespace-nowrap\n            transition-opacity duration-200\n            opacity-100\n            ${positionClasses[position]}\n          `}\n          role=\"tooltip\"\n        >\n          {tooltip}\n          <div \n            className={`\n              absolute w-2 h-2 bg-gray-900\n              transform rotate-45\n              ${position === 'top' ? 'bottom-[-4px] left-1/2 -translate-x-1/2' : ''}\n              ${position === 'bottom' ? 'top-[-4px] left-1/2 -translate-x-1/2' : ''}\n              ${position === 'left' ? 'right-[-4px] top-1/2 -translate-y-1/2' : ''}\n              ${position === 'right' ? 'left-[-4px] top-1/2 -translate-y-1/2' : ''}\n            `}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAWO,SAAS,QAAQ,EACtB,QAAQ,EACR,OAAO,EACP,WAAW,KAAK,EAChB,QAAQ,CAAC,EACI;IACb,MAAM,CAAC,WAAW,aAAa,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAU;IAC1D,MAAM,aAAa,qMAAA,CAAA,UAAK,CAAC,MAAM,CAA6B;IAE5D,MAAM,kBAAkB;QACtB,KAAK;QACL,QAAQ;QACR,MAAM;QACN,OAAO;IACT;IAEA,MAAM,mBAAmB;QACvB,IAAI,OAAO;YACT,WAAW,OAAO,GAAG,WAAW,IAAM,aAAa,OAAO;QAC5D,OAAO;YACL,aAAa;QACf;IACF;IAEA,MAAM,mBAAmB;QACvB,IAAI,WAAW,OAAO,EAAE;YACtB,aAAa,WAAW,OAAO;QACjC;QACA,aAAa;IACf;IAEA,qMAAA,CAAA,UAAK,CAAC,SAAS,CAAC;QACd,OAAO;YACL,IAAI,WAAW,OAAO,EAAE;gBACtB,aAAa,WAAW,OAAO;YACjC;QACF;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QACC,WAAU;QACV,cAAc;QACd,cAAc;;YAEb;YACA,2BACC,8OAAC;gBACC,WAAW,CAAC;;;;;;YAMV,EAAE,eAAe,CAAC,SAAS,CAAC;UAC9B,CAAC;gBACD,MAAK;;oBAEJ;kCACD,8OAAC;wBACC,WAAW,CAAC;;;cAGV,EAAE,aAAa,QAAQ,4CAA4C,GAAG;cACtE,EAAE,aAAa,WAAW,yCAAyC,GAAG;cACtE,EAAE,aAAa,SAAS,0CAA0C,GAAG;cACrE,EAAE,aAAa,UAAU,yCAAyC,GAAG;YACvE,CAAC;;;;;;;;;;;;;;;;;;AAMb"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///home/kasinadhsarma/dr-detection/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/kasinadhsarma/dr-detection/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"text-2xl font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nexport { Card, CardHeader, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sDAAsD;QACnE,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///home/kasinadhsarma/dr-detection/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\nimport { Loader2 } from \"lucide-react\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        google: \"bg-white text-gray-700 border border-gray-300 hover:bg-gray-50\",\n        github: \"bg-[#24292F] text-white hover:bg-[#24292F]/90\",\n        linkedin: \"bg-[#0A66C2] text-white hover:bg-[#0A66C2]/90\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n  isLoading?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, isLoading = false, children, disabled, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        disabled={isLoading || disabled}\n        {...props}\n      >\n        {isLoading ? (\n          <>\n            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n            {children}\n          </>\n        ) : (\n          children\n        )}\n      </Comp>\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;AAFA;AAGA;;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,wQACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;YACN,QAAQ;YACR,QAAQ;YACR,UAAU;QACZ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAUF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,YAAY,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IAC/F,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACL,UAAU,aAAa;QACtB,GAAG,KAAK;kBAER,0BACC;;8BACE,8OAAC,iNAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;gBAClB;;2BAGH;;;;;;AAIR;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file:///home/kasinadhsarma/dr-detection/app/dashboard/page.tsx"],"sourcesContent":["\"use client\"\nimport type React from \"react\"\nimport { useState, useRef, useCallback } from \"react\"\nimport Image from \"next/image\"\nimport { Upload, Loader2, AlertTriangle, Info, CheckCircle, AlertCircle, Camera } from \"lucide-react\"\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { AnalysisResponse, type AnalysisData } from \"@/types/analysis\"\n\ninterface AnalysisResult extends AnalysisData {\n  id: string\n  date: string\n}\n\nconst severityColors: Record<string, string> = {\n  \"No DR\": \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-100\",\n  \"Mild DR\": \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-100\",\n  \"Moderate DR\": \"bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-100\",\n  \"Severe DR\": \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-100\",\n  \"Proliferative DR\": \"bg-red-200 text-red-900 dark:bg-red-950 dark:text-red-100\",\n}\n\nconst CONFIDENCE_THRESHOLDS = {\n  HIGH: 70,\n  MODERATE: 50,\n  LOW: 30,\n}\n\nconst getConfidenceLevel = (confidence: number): { color: string; message: string; icon: React.ReactNode } => {\n  if (confidence >= CONFIDENCE_THRESHOLDS.HIGH)\n    return {\n      color: \"text-green-600 dark:text-green-400\",\n      message: \"High confidence prediction\",\n      icon: <CheckCircle className=\"w-5 h-5\" />,\n    }\n  if (confidence >= CONFIDENCE_THRESHOLDS.MODERATE)\n    return {\n      color: \"text-yellow-600 dark:text-yellow-400\",\n      message: \"Moderate confidence - consider second opinion\",\n      icon: <AlertCircle className=\"w-5 h-5\" />,\n    }\n  return {\n    color: \"text-red-600 dark:text-red-400\",\n    message: \"Low confidence - results may not be reliable\",\n    icon: <AlertTriangle className=\"w-5 h-5\" />,\n  }\n}\n\nconst MAX_FILE_SIZE = 10 * 1024 * 1024 // 10MB\nconst ALLOWED_TYPES = [\"image/jpeg\", \"image/png\"]\n\nconst API_URL = process.env.NEXT_PUBLIC_PYTHON_API_URL || \"http://localhost:8000\"\n\nconst Dashboard: React.FC = () => {\n  // ... (state variables remain the same)\n\n  // ... (existing functions remain the same)\n\n  const renderSeverityScores = () => {\n    if (!analysisResult?.severity_scores) return null\n\n    return Object.entries(analysisResult.severity_scores)\n      .sort(([, a], [, b]) => b - a)\n      .map(([level, score]) => (\n        <div key={level} className=\"flex items-center gap-2 mb-2\">\n          <span className=\"w-24 text-sm font-medium text-gray-700 dark:text-gray-300\">{level}:</span>\n          <Progress value={score} className=\"flex-1\" />\n          <span className=\"w-16 text-right text-sm text-gray-600 dark:text-gray-400\">{formatConfidence(score)}</span>\n        </div>\n      ))\n  }\n\n  const renderCamera = useCallback(\n    () => (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"relative aspect-video w-full overflow-hidden rounded-lg bg-black mb-4\">\n            <video\n              ref={videoRef}\n              autoPlay\n              playsInline\n              muted\n              className=\"w-full h-full object-cover\"\n              aria-label=\"Camera preview\"\n            />\n            {!isCameraReady && (\n              <div className=\"absolute inset-0 flex items-center justify-center bg-black/50\">\n                <Loader2 className=\"w-8 h-8 animate-spin text-white\" />\n                <span className=\"ml-2 text-white\">Starting camera...</span>\n              </div>\n            )}\n            {isCapturing && (\n              <div className=\"absolute inset-0 bg-white/90 flex items-center justify-center\">\n                <Loader2 className=\"w-8 h-8 animate-spin text-gray-700\" />\n                <span className=\"ml-2 text-gray-700\">Capturing...</span>\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex justify-center gap-4\">\n            <Button onClick={captureImage} disabled={!isCameraReady || isCapturing} className=\"w-full\">\n              {isCapturing ? (\n                <>\n                  <Loader2 className=\"w-5 h-5 animate-spin mr-2\" />\n                  <span>Capturing...</span>\n                </>\n              ) : (\n                <>\n                  <Camera className=\"w-5 h-5 mr-2\" />\n                  <span>Capture Photo</span>\n                </>\n              )}\n            </Button>\n\n            <Button onClick={stopCamera} variant=\"outline\" className=\"w-full\">\n              Cancel\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    ),\n    [isCameraReady, isCapturing, captureImage, stopCamera],\n  )\n\n  const renderAnalysisResults = () => {\n    if (analyzing) {\n      return (\n        <Card>\n          <CardContent className=\"flex flex-col items-center justify-center p-8\">\n            <Loader2 className=\"w-12 h-12 animate-spin text-primary mb-4\" />\n            <p className=\"text-gray-600 dark:text-gray-400\">Analyzing image...</p>\n          </CardContent>\n        </Card>\n      )\n    }\n\n    if (!selectedImage || !analysisResult) {\n      return (\n        <Card>\n          <CardContent className=\"p-8 text-center\">\n            <p className=\"text-gray-600 dark:text-gray-400\">{error || \"Upload an image to see analysis results\"}</p>\n          </CardContent>\n        </Card>\n      )\n    }\n\n    if (error) {\n      return (\n        <Card>\n          <CardContent className=\"p-8 text-center\">\n            <AlertTriangle className=\"w-12 h-12 mx-auto mb-4 text-red-500\" />\n            <p className=\"text-red-600 dark:text-red-400\">{error}</p>\n          </CardContent>\n        </Card>\n      )\n    }\n\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Analysis Results</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n            <span className=\"text-gray-600 dark:text-gray-400\">Severity Level:</span>\n            <span className={`px-4 py-2 rounded-full text-sm font-medium ${severityColors[analysisResult.severity]}`}>\n              {analysisResult.severity}\n            </span>\n          </div>\n\n          <div className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n            <h3 className=\"text-lg font-semibold mb-2\">Confidence Score</h3>\n            <div className=\"flex items-center\">\n              <Progress value={analysisResult.confidence} className=\"flex-1 mr-4\" />\n              <span className={`text-lg font-bold ${getConfidenceLevel(analysisResult.confidence).color}`}>\n                {formatConfidence(analysisResult.confidence)}\n              </span>\n            </div>\n            <p className={`text-sm mt-2 ${getConfidenceLevel(analysisResult.confidence).color}`}>\n              {getConfidenceLevel(analysisResult.confidence).message}\n            </p>\n          </div>\n\n          {analysisResult.severity_scores && (\n            <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-4 flex items-center gap-2\">\n                Detailed Scores\n                <TooltipProvider>\n                  <Tooltip>\n                    <TooltipTrigger>\n                      <Info className=\"w-4 h-4 text-gray-400\" />\n                    </TooltipTrigger>\n                    <TooltipContent>Confidence scores for each severity level</TooltipContent>\n                  </Tooltip>\n                </TooltipProvider>\n              </h3>\n              <div className=\"space-y-3\">{renderSeverityScores()}</div>\n            </div>\n          )}\n\n          {analysisResult.confidence < CONFIDENCE_THRESHOLDS.MODERATE && (\n            <div className=\"mt-4 p-4 bg-yellow-50 dark:bg-yellow-900/50 rounded-lg border border-yellow-200 dark:border-yellow-800\">\n              <div className=\"flex gap-2 items-start text-yellow-800 dark:text-yellow-200\">\n                <AlertTriangle className=\"w-5 h-5 mt-0.5 flex-shrink-0\" />\n                <div className=\"text-sm\">\n                  <p className=\"font-medium mb-2\">Due to the low confidence scores:</p>\n                  <ul className=\"list-disc ml-5 space-y-1\">\n                    <li>Consult with a healthcare professional for accurate diagnosis</li>\n                    <li>Consider retaking the image with better lighting and focus</li>\n                    <li>Use this result only as a preliminary screening tool</li>\n                    <li>Regular eye examinations are recommended for diabetic patients</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen p-8 bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800\">\n      <main className=\"max-w-4xl mx-auto\">\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"text-3xl font-bold text-center bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\n              Diabetic Retinopathy Detection\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-center text-gray-600 dark:text-gray-400\">\n              Upload a retinal image for automated DR screening\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"mb-8\">\n          <CardContent className=\"p-8\">\n            {isCameraOpen ? (\n              renderCamera()\n            ) : (\n              <div\n                className={`border-2 border-dashed rounded-lg p-8 text-center ${\n                  error ? \"border-red-300\" : \"border-gray-300 dark:border-gray-700\"\n                }`}\n                onDrop={handleDrop}\n                onDragOver={(e) => e.preventDefault()}\n              >\n                <input type=\"file\" accept=\"image/*\" className=\"hidden\" ref={fileInputRef} onChange={handleFileChange} />\n\n                {selectedImage ? (\n                  <div className=\"space-y-4\">\n                    <div className=\"relative h-64 w-full\">\n                      <Image\n                        src={selectedImage || \"/placeholder.svg\"}\n                        alt=\"Selected retinal image\"\n                        fill\n                        className=\"object-contain rounded-lg\"\n                      />\n                    </div>\n                    <Button\n                      onClick={() => fileInputRef.current?.click()}\n                      disabled={uploading || analyzing}\n                      className=\"w-full\"\n                    >\n                      {uploading ? (\n                        <>\n                          <Loader2 className=\"w-5 h-5 animate-spin mr-2\" />\n                          <span>Processing...</span>\n                        </>\n                      ) : (\n                        <>\n                          <Camera className=\"w-5 h-5 mr-2\" />\n                          <span>Take Another Photo</span>\n                        </>\n                      )}\n                    </Button>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    <Upload className=\"w-12 h-12 mx-auto text-gray-400\" />\n                    <div>\n                      <p className=\"text-gray-600 dark:text-gray-400\">Take a photo or upload a retinal image</p>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-500 mt-2\">\n                        Supported formats: JPEG, PNG (max 10MB)\n                      </p>\n                    </div>\n                    <div className=\"flex justify-center gap-4\">\n                      <Button onClick={() => fileInputRef.current?.click()} variant=\"outline\">\n                        <Upload className=\"w-5 h-5 mr-2\" />\n                        <span>Select Image</span>\n                      </Button>\n                      <Button\n                        onClick={() => {\n                          setIsCameraOpen(true)\n                          startCamera()\n                        }}\n                      >\n                        <Camera className=\"w-5 h-5 mr-2\" />\n                        <span>Use Camera</span>\n                      </Button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {cameraError && (\n              <div className=\"mt-4 p-4 bg-red-50 dark:bg-red-900/50 border border-red-200 dark:border-red-800 rounded-lg\">\n                <div className=\"flex items-center gap-2 text-red-700 dark:text-red-200\">\n                  <AlertTriangle className=\"w-5 h-5\" />\n                  <p>{cameraError}</p>\n                </div>\n              </div>\n            )}\n\n            {error && (\n              <div className=\"mt-4 p-4 bg-red-50 dark:bg-red-900/50 border border-red-200 dark:border-red-800 rounded-lg\">\n                <div className=\"flex items-center gap-2 text-red-700 dark:text-red-200\">\n                  <AlertTriangle className=\"w-5 h-5\" />\n                  <p>{error}</p>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {renderAnalysisResults()}\n\n        {analysisHistory.length > 0 && (\n          <Card className=\"mt-8\">\n            <CardHeader>\n              <CardTitle>Analysis History</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n                {analysisHistory.map((result) => (\n                  <Card key={result.id} className=\"overflow-hidden\">\n                    <CardHeader className=\"p-4\">\n                      <div className=\"flex justify-between items-center\">\n                        <span\n                          className={`px-3 py-1 rounded-full text-sm font-medium ${severityColors[result.severity]}`}\n                        >\n                          {result.severity}\n                        </span>\n                        <time className=\"text-sm text-gray-500 dark:text-gray-400\">\n                          {new Date(result.date).toLocaleDateString()}\n                        </time>\n                      </div>\n                    </CardHeader>\n                    <CardContent className=\"p-4\">\n                      <Progress value={result.confidence} className=\"mb-2\" />\n                      <p className={`text-sm ${getConfidenceLevel(result.confidence).color}`}>\n                        Confidence: {formatConfidence(result.confidence)}\n                      </p>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </main>\n    </div>\n  )\n}\n\nexport default Dashboard\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}