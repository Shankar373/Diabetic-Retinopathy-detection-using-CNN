{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/kasinadhsarma/dr-detection/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/kasinadhsarma/dr-detection/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Portal>\n    <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </TooltipPrimitive.Portal>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,kBAAkB,oKAAiB,QAAQ;AAEjD,MAAM,UAAU,oKAAiB,IAAI;AAErC,MAAM,iBAAiB,oKAAiB,OAAO;AAE/C,MAAM,+BAAiB,sMAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,oKAAiB,MAAM;kBACtB,cAAA,8OAAC,oKAAiB,OAAO;YACvB,KAAK;YACL,YAAY;YACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qXACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,oKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///home/kasinadhsarma/dr-detection/components/ui/ProgressRing.tsx"],"sourcesContent":["interface ProgressRingProps {\n  progress: number;\n  size?: number;\n  strokeWidth?: number;\n  className?: string;\n}\n\nexport function ProgressRing({ \n  progress, \n  size = 120, \n  strokeWidth = 8,\n  className = \"\" \n}: ProgressRingProps) {\n  const radius = (size - strokeWidth) / 2;\n  const circumference = radius * 2 * Math.PI;\n  const offset = circumference - (progress / 100) * circumference;\n\n  return (\n    <div className={`relative ${className}`}>\n      <svg\n        className=\"transform -rotate-90\"\n        width={size}\n        height={size}\n      >\n        {/* Background circle */}\n        <circle\n          className=\"text-gray-200 dark:text-gray-700\"\n          strokeWidth={strokeWidth}\n          stroke=\"currentColor\"\n          fill=\"transparent\"\n          r={radius}\n          cx={size / 2}\n          cy={size / 2}\n        />\n        {/* Progress circle */}\n        <circle\n          className=\"text-blue-500 transition-all duration-500 ease-in-out\"\n          strokeWidth={strokeWidth}\n          strokeDasharray={circumference}\n          strokeDashoffset={offset}\n          strokeLinecap=\"round\"\n          stroke=\"currentColor\"\n          fill=\"transparent\"\n          r={radius}\n          cx={size / 2}\n          cy={size / 2}\n        />\n      </svg>\n      <div className=\"absolute inset-0 flex items-center justify-center\">\n        <span className=\"text-2xl font-bold\">{Math.round(progress)}%</span>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAOO,SAAS,aAAa,EAC3B,QAAQ,EACR,OAAO,GAAG,EACV,cAAc,CAAC,EACf,YAAY,EAAE,EACI;IAClB,MAAM,SAAS,CAAC,OAAO,WAAW,IAAI;IACtC,MAAM,gBAAgB,SAAS,IAAI,KAAK,EAAE;IAC1C,MAAM,SAAS,gBAAgB,AAAC,WAAW,MAAO;IAElD,qBACE,8OAAC;QAAI,WAAW,CAAC,SAAS,EAAE,WAAW;;0BACrC,8OAAC;gBACC,WAAU;gBACV,OAAO;gBACP,QAAQ;;kCAGR,8OAAC;wBACC,WAAU;wBACV,aAAa;wBACb,QAAO;wBACP,MAAK;wBACL,GAAG;wBACH,IAAI,OAAO;wBACX,IAAI,OAAO;;;;;;kCAGb,8OAAC;wBACC,WAAU;wBACV,aAAa;wBACb,iBAAiB;wBACjB,kBAAkB;wBAClB,eAAc;wBACd,QAAO;wBACP,MAAK;wBACL,GAAG;wBACH,IAAI,OAAO;wBACX,IAAI,OAAO;;;;;;;;;;;;0BAGf,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAU;;wBAAsB,KAAK,KAAK,CAAC;wBAAU;;;;;;;;;;;;;;;;;;AAInE"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/kasinadhsarma/dr-detection/app/dashboard/page.tsx"],"sourcesContent":["\"use client\"\nimport type React from \"react\"\nimport { useState, useRef, useCallback } from \"react\"\nimport Image from \"next/image\"\nimport { Upload, Loader2, AlertTriangle, Info, CheckCircle, AlertCircle, Camera, Settings } from \"lucide-react\"\nimport { io } from \"socket.io-client\"\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\nimport { Dialog, Transition, DialogPanel, DialogTitle } from \"@headlessui/react\"\nimport { Fragment } from \"react\"\nimport \"../styles/dashboard.css\"\nimport { ProgressRing } from \"@/components/ui/ProgressRing\"\nimport type { AnalysisData } from \"@/types/analysis\"\n\ninterface AnalysisResult extends AnalysisData {\n  id: string\n  date: string\n  severity: string\n  confidence: number\n  severity_scores: Record<string, number>\n  processing_time: number\n}\n\nconst severityColors: Record<string, string> = {\n  \"No DR\": \"bg-green-100 text-green-800\",\n  \"Mild DR\": \"bg-yellow-100 text-yellow-800\",\n  \"Moderate DR\": \"bg-orange-100 text-orange-800\",\n  \"Severe DR\": \"bg-red-100 text-red-800\",\n  \"Proliferative DR\": \"bg-red-200 text-red-900\",\n}\n\nconst CONFIDENCE_THRESHOLDS = {\n  HIGH: 70,\n  MODERATE: 40,\n  LOW: 20,\n}\n\nconst getConfidenceLevel = (confidence: number): { color: string; message: string; icon: React.ReactNode } => {\n  if (confidence >= CONFIDENCE_THRESHOLDS.HIGH)\n    return {\n      color: \"text-green-600\",\n      message: \"High confidence - reliable results\",\n      icon: <CheckCircle className=\"w-5 h-5\" />,\n    }\n  if (confidence >= CONFIDENCE_THRESHOLDS.MODERATE)\n    return {\n      color: \"text-yellow-600\",\n      message: \"Moderate confidence - consider second opinion\",\n      icon: <AlertCircle className=\"w-5 h-5\" />,\n    }\n  return {\n    color: \"text-red-600\",\n    message: \"Low confidence - results may not be reliable\",\n    icon: <AlertTriangle className=\"w-5 h-5\" />,\n  }\n}\n\nconst MAX_FILE_SIZE = 10 * 1024 * 1024 // 10MB\nconst ALLOWED_TYPES = [\"image/jpeg\", \"image/png\"]\n\nconst API_URL = process.env.NEXT_PUBLIC_PYTHON_API_URL || \"http://localhost:8000\"\nconst SOCKET_URL = process.env.NEXT_PUBLIC_SOCKET_URL || \"http://localhost:8000\"\n\n// Remove this function since it's not being used\n\nconst Dashboard: React.FC = () => {\n  const socket = io(SOCKET_URL)\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to socket.io server')\n    })\n\n    socket.on('disconnect', () => {\n      console.log('Disconnected from socket.io server')\n    })\n\n    return () => {\n      socket.off('connect')\n      socket.off('disconnect')\n    }\n  }, [])\n  const [selectedImage, setSelectedImage] = useState<string | null>(null)\n  const [analyzing, setIsAnalyzing] = useState(false)\n  const [uploading, setUploading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResult | null>(null)\n  const fileInputRef = useRef<HTMLInputElement>(null)\n  const [cameraError, setCameraError] = useState<string | null>(null)\n  const [isCapturing, setIsCapturing] = useState(false)\n  const [cameraMode, setCameraMode] = useState<\"environment\" | \"user\">(\"environment\")\n  const [isCameraOpen, setIsCameraOpen] = useState(false)\n  const [isCameraReady, setCameraReady] = useState(false)\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const streamRef = useRef<MediaStream | null>(null)\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false)\n  const [analysisHistory, setAnalysisHistory] = useState<AnalysisResult[]>([])\n\n  const validateFile = (file: File): string | null => {\n    if (!ALLOWED_TYPES.includes(file.type)) {\n      return \"Please upload a JPEG or PNG image.\"\n    }\n    if (file.size > MAX_FILE_SIZE) {\n      return \"File size must be less than 10MB.\"\n    }\n    return null\n  }\n\n  const handleImageSelect = useCallback(async (file: File) => {\n    const validationError = validateFile(file)\n    if (validationError) {\n      setError(validationError)\n      return\n    }\n\n    setIsAnalyzing(true)\n    setUploading(true)\n    setError(null)\n\n    try {\n      const formData = new FormData()\n      formData.append(\"file\", file)\n\n      const response = await fetch(`${API_URL}/predict`, {\n        method: \"POST\",\n        body: formData,\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      const result = await response.json()\n\n      if (!result.success) {\n        throw new Error(result.error || \"Analysis failed\")\n      }\n\n      const analysisData = {\n        id: Date.now().toString(),\n        date: new Date().toISOString(),\n        ...result.data,\n      }\n\n      setAnalysisResult(analysisData)\n      setAnalysisHistory((prev) => [analysisData, ...prev])\n      setSelectedImage(URL.createObjectURL(file))\n    } catch (err) {\n      console.error(\"Analysis error:\", err)\n      setError(\"Failed to connect to analysis service. Please try again.\")\n      setAnalysisResult(null)\n    } finally {\n      setIsAnalyzing(false)\n      setUploading(false)\n    }\n  }, [])\n\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    const file = e.dataTransfer.files[0]\n    if (file) {\n      handleImageSelect(file)\n    } else {\n      setError(\"No file selected\")\n    }\n  }\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0]\n    if (!file) {\n      setError(\"No file selected\")\n      return\n    }\n    handleImageSelect(file)\n  }\n\n  const formatConfidence = (confidence: number): string => {\n    return `${confidence.toFixed(1)}%`\n  }\n\n  const startCamera = useCallback(async () => {\n    try {\n      const permission = await navigator.permissions.query({ name: \"camera\" as PermissionName })\n\n      if (permission.state === \"denied\") {\n        throw new Error(\"Camera permission denied. Please enable camera access in your browser settings.\")\n      }\n\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach((track) => track.stop())\n      }\n\n      const constraints: MediaStreamConstraints = {\n        video: {\n          facingMode: cameraMode,\n          width: { ideal: 1920 },\n          height: { ideal: 1080 },\n        },\n      }\n\n      const stream = await navigator.mediaDevices.getUserMedia(constraints)\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream\n        streamRef.current = stream\n\n        await videoRef.current.play()\n        setIsCameraOpen(true)\n        setCameraReady(true)\n        setCameraError(null)\n      }\n    } catch (err) {\n      console.error(\"Camera access error:\", err)\n      setCameraError(\n        err instanceof Error ? err.message : \"Could not access camera. Please check permissions and try again.\",\n      )\n      setIsCameraOpen(false)\n      setCameraReady(false)\n    }\n  }, [cameraMode])\n\n  const stopCamera = useCallback(() => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach((track) => track.stop())\n      streamRef.current = null\n    }\n    if (videoRef.current) {\n      videoRef.current.srcObject = null\n    }\n    setIsCameraOpen(false)\n    setCameraReady(false)\n  }, [])\n\n  const captureImage = useCallback(async () => {\n    if (!videoRef.current || !isCameraReady) {\n      setCameraError(\"Camera is not ready\")\n      return\n    }\n\n    try {\n      setIsCapturing(true)\n      setError(null)\n\n      const video = videoRef.current\n      const canvas = document.createElement(\"canvas\")\n\n      canvas.width = video.videoWidth\n      canvas.height = video.videoHeight\n\n      const ctx = canvas.getContext(\"2d\")\n      if (!ctx) throw new Error(\"Could not get canvas context\")\n\n      ctx.drawImage(video, 0, 0)\n\n      const blob = await new Promise<Blob>((resolve, reject) => {\n        canvas.toBlob(\n          (blob) => {\n            if (blob) resolve(blob)\n            else reject(new Error(\"Failed to capture image\"))\n          },\n          \"image/jpeg\",\n          0.95,\n        )\n      })\n\n      const file = new File([blob], \"retina-capture.jpg\", {\n        type: \"image/jpeg\",\n        lastModified: Date.now(),\n      })\n\n      setSelectedImage(URL.createObjectURL(blob))\n      stopCamera()\n      await handleImageSelect(file)\n    } catch (error) {\n      console.error(\"Error capturing:\", error)\n      setCameraError(\"Failed to capture image. Please try again.\")\n    } finally {\n      setIsCapturing(false)\n    }\n  }, [isCameraReady, handleImageSelect, stopCamera])\n\n  const renderSeverityScores = () => {\n    if (!analysisResult?.severity_scores) return null\n\n    return Object.entries(analysisResult.severity_scores)\n      .sort(([, a], [, b]) => b - a)\n      .map(([level, score]) => (\n        <div key={level} className=\"flex items-center gap-4 w-full\">\n          <span className=\"text-sm font-medium min-w-[120px]\">{level}:</span>\n          <div className=\"flex-1 h-2 bg-gray-100 rounded-full overflow-hidden\">\n            <div\n              className={`h-full ${getProgressBarColorClass(score)} transition-all duration-500`}\n              style={{ width: `${score}%` }}\n            />\n          </div>\n          <span className=\"text-sm tabular-nums w-16 text-right\">{formatConfidence(score)}</span>\n        </div>\n      ))\n  }\n\n  const renderCamera = useCallback(\n    () => (\n      <div className=\"space-y-4\">\n        <div className=\"relative aspect-video w-full overflow-hidden rounded-lg bg-black\">\n          <video\n            ref={videoRef}\n            autoPlay\n            playsInline\n            muted\n            className=\"w-full h-full object-cover\"\n            aria-label=\"Camera preview\"\n          />\n          {!isCameraReady && (\n            <div className=\"absolute inset-0 flex items-center justify-center bg-black/50\">\n              <Loader2 className=\"w-8 h-8 animate-spin text-white\" />\n              <span className=\"ml-2 text-white\">Starting camera...</span>\n            </div>\n          )}\n          {isCapturing && (\n            <div className=\"absolute inset-0 bg-white/90 flex items-center justify-center\">\n              <Loader2 className=\"w-8 h-8 animate-spin text-gray-700\" />\n              <span className=\"ml-2 text-gray-700\">Capturing...</span>\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex justify-center gap-4\">\n          <button\n            onClick={captureImage}\n            disabled={!isCameraReady || isCapturing}\n            className={`inline-flex items-center gap-2 px-6 py-3 rounded-full ${\n              !isCameraReady || isCapturing\n                ? \"bg-gray-400 cursor-not-allowed\"\n                : \"bg-green-500 hover:bg-green-600 active:scale-95\"\n            } text-white font-medium transition-all transform`}\n            aria-label=\"Capture photo\"\n          >\n            {isCapturing ? (\n              <>\n                <Loader2 className=\"w-5 h-5 animate-spin\" />\n                <span>Capturing...</span>\n              </>\n            ) : (\n              <>\n                <Camera className=\"w-5 h-5\" />\n                <span>Capture Photo</span>\n              </>\n            )}\n          </button>\n\n          <button\n            onClick={stopCamera}\n            className=\"inline-flex items-center gap-2 px-6 py-3 bg-gray-500 hover:bg-gray-600 text-white font-medium rounded-full transition-colors\"\n            aria-label=\"Stop camera\"\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    ),\n    [isCameraReady, isCapturing, captureImage, stopCamera],\n  )\n\n  const handleRefresh = () => {\n    setSelectedImage(null)\n    setAnalysisResult(null)\n    setError(null)\n  }\n\n  const renderAnalysisResults = () => {\n    if (analyzing) {\n      return (\n        <div className=\"flex flex-col items-center justify-center p-8\">\n          <div className=\"relative\">\n            <ProgressRing progress={75} className=\"mb-4\" />\n            <div className=\"absolute inset-0 flex items-center justify-center\">\n              <Loader2 className=\"w-8 h-8 animate-spin text-blue-500\" />\n            </div>\n          </div>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-4\">Analyzing image...</p>\n        </div>\n      )\n    }\n\n    if (!selectedImage) {\n      return <p className=\"text-gray-700 text-center\">No image uploaded yet</p>\n    }\n\n    if (error) {\n      return (\n        <div className=\"text-center text-red-600\">\n          <AlertTriangle className=\"w-8 h-8 mx-auto mb-2\" />\n          <p>{error}</p>\n        </div>\n      )\n    }\n\n    if (!analysisResult) {\n      return <p className=\"text-gray-700 text-center\">Upload an image to see analysis results</p>\n    }\n\n    return (\n      <div className=\"space-y-6 card-hover\">\n        <div className=\"flex items-center justify-between p-4 glassmorphism rounded-lg\">\n          <button\n            onClick={handleRefresh}\n            className=\"inline-flex items-center gap-2 px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white font-medium rounded-full transition-colors\"\n            aria-label=\"Refresh\"\n          >\n            Refresh\n          </button>\n        </div>\n\n        <div className=\"flex items-center justify-between p-4 glassmorphism rounded-lg\">\n          <span className=\"text-gray-600 dark:text-gray-400\">Severity Level:</span>\n          <div className=\"flex items-center gap-2\">\n            <span className={`px-4 py-2 rounded-full text-sm font-medium ${severityColors[analysisResult.severity]}`}>\n              {analysisResult.severity}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between p-6 glassmorphism rounded-lg\">\n          <div className=\"flex-1\">\n            <h3 className=\"text-lg font-semibold mb-2\">Confidence Score</h3>\n            <p className={`text-sm ${getConfidenceLevel(analysisResult.confidence).color}`}>\n              {getConfidenceLevel(analysisResult.confidence).message}\n            </p>\n          </div>\n          <ProgressRing progress={analysisResult.confidence} size={80} className=\"ml-4\" />\n        </div>\n\n        {analysisResult.severity_scores && (\n          <div className=\"mt-4 pt-4 border-t\">\n            <h3 className=\"text-sm font-semibold text-gray-700 mb-4 flex items-center gap-2\">\n              Detailed Scores\n              <TooltipProvider>\n                <Tooltip>\n                  <TooltipTrigger>\n                    <Info className=\"confidence-indicator\" />\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    <p>Confidence scores for each severity level</p>\n                  </TooltipContent>\n                </Tooltip>\n              </TooltipProvider>\n            </h3>\n            <div className=\"space-y-3\">{renderSeverityScores()}</div>\n          </div>\n        )}\n\n        {analysisResult.confidence < CONFIDENCE_THRESHOLDS.MODERATE && (\n          <div className=\"mt-4 p-4 bg-yellow-50 rounded-lg border border-yellow-100\">\n            <div className=\"flex gap-2 items-start text-yellow-800\">\n              <AlertTriangle className=\"w-5 h-5 mt-0.5 flex-shrink-0\" />\n              <div className=\"text-sm\">\n                <p className=\"font-medium mb-2\">Due to the low confidence scores:</p>\n                <ul className=\"list-disc ml-5 space-y-1\">\n                  <li>Consult with a healthcare professional for accurate diagnosis</li>\n                  <li>Consider retaking the image with better lighting and focus</li>\n                  <li>Use this result only as a preliminary screening tool</li>\n                  <li>Regular eye examinations are recommended for diabetic patients</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  const toggleSettings = () => {\n    setIsSettingsOpen(!isSettingsOpen)\n  }\n\n  const handleCameraModeChange = (mode: \"user\" | \"environment\") => {\n    setCameraMode(mode)\n  }\n\n  const handleRetake = () => {\n    setSelectedImage(null)\n    setAnalysisResult(null)\n    setError(null)\n    setIsCameraOpen(true)\n    startCamera()  // Added to reinitialize the camera\n  }\n\n  return (\n    <div className=\"min-h-screen p-8 bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800\">\n      <main className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-3xl font-bold text-center mb-8\">Diabetic Retinopathy Detection</h1>\n\n        <section className=\"glassmorphism p-8 rounded-lg shadow-lg transition-all fade-in\">\n          {isCameraOpen ? (\n            renderCamera()\n          ) : (\n            <div\n              className={`drop-zone ${error ? \"drop-zone-error\" : \"drop-zone-default\"}`}\n              onDrop={handleDrop}\n              onDragOver={(e) => e.preventDefault()}\n            >\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                className=\"hidden\"\n                ref={fileInputRef}\n                title=\"Select Image\"\n                onChange={handleFileChange}\n              />\n\n              {selectedImage ? (\n                <div className=\"space-y-4\">\n                  <div className=\"relative h-64 w-full\">\n                    <Image\n                      src={selectedImage || \"/placeholder.svg\"}\n                      alt=\"Selected retinal image\"\n                      fill\n                      className=\"object-contain rounded-lg\"\n                    />\n                  </div>\n                  <button\n                    className={`inline-flex items-center gap-2 px-6 py-3 rounded-full ${\n                      uploading ? \"bg-gray-400 cursor-not-allowed\" : \"bg-blue-500 hover:bg-blue-600\"\n                    } text-white font-medium transition-colors`}\n                    onClick={handleRetake}\n                    disabled={uploading || analyzing}\n                  >\n                    {uploading ? (\n                      <>\n                        <Loader2 className=\"w-5 h-5 animate-spin\" />\n                        <span>Processing...</span>\n                      </>\n                    ) : (\n                      <>\n                        <Camera className=\"w-5 h-5\" />\n                        <span>Take Another Photo</span>\n                      </>\n                    )}\n                  </button>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  <Upload className=\"w-12 h-12 mx-auto text-gray-400\" />\n                  <p className=\"text-gray-600\">Take a photo or upload a retinal image</p>\n                  <p className=\"text-sm text-gray-500 mt-2\">Supported formats: JPEG, PNG (max 10MB)</p>\n                  <div className=\"flex justify-center gap-4\">\n                    <button\n                      className=\"inline-flex items-center gap-2 px-6 py-3 bg-blue-500 hover:bg-blue-600 text-white font-medium rounded-full transition-colors\"\n                      onClick={() => fileInputRef.current?.click()}\n                      aria-label=\"Select image file\"\n                    >\n                      <Upload className=\"w-5 h-5\" />\n                      <span>Select Image</span>\n                    </button>\n                    <button\n                      className=\"inline-flex items-center gap-2 px-6 py-3 bg-green-500 hover:bg-green-600 text-white font-medium rounded-full transition-colors\"\n                      onClick={() => {\n                        setIsCameraOpen(true)\n                        startCamera()\n                      }}\n                      aria-label=\"Start camera\"\n                    >\n                      <Camera className=\"w-5 h-5\" />\n                      <span>Use Camera</span>\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </section>\n\n        {cameraError && (\n          <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-center gap-2 text-red-700\">\n              <AlertTriangle className=\"w-5 h-5\" />\n              <p>{cameraError}</p>\n            </div>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-center gap-2 text-red-700\">\n              <AlertTriangle className=\"w-5 h-5\" />\n              <p>{error}</p>\n            </div>\n          </div>\n        )}\n\n        <div className=\"mt-8\">\n          <h2 className=\"text-xl font-semibold mb-4\">Analysis Results</h2>\n          <div className=\"p-6 bg-white rounded-lg shadow-sm\">{renderAnalysisResults()}</div>\n        </div>\n\n        {analysisHistory.length > 0 && (\n          <div className=\"mt-8 grid gap-6 md:grid-cols-2 lg:grid-cols-3 fade-in\">\n            {analysisHistory.map((result: AnalysisResult) => (\n              <div key={result.id} className=\"glassmorphism p-6 rounded-lg shadow-md card-hover\">\n                <div className=\"flex justify-between items-start mb-4\">\n                  <span className={`px-3 py-1 rounded-full text-sm font-medium ${severityColors[result.severity]}`}>\n                    {result.severity}\n                  </span>\n                  <time className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {new Date(result.date).toLocaleDateString()}\n                  </time>\n                </div>\n                <ProgressRing progress={result.confidence} size={60} className=\"mx-auto my-4\" />\n              </div>\n            ))}\n          </div>\n        )}\n      </main>\n\n      <button type=\"button\" onClick={toggleSettings} className=\"settings-button\" title=\"Open Settings\">\n        <Settings className=\"w-5 h-5\" />\n      </button>\n\n      <Transition show={isSettingsOpen} as={Fragment}>\n        <Dialog as=\"div\" className=\"relative z-10\" onClose={toggleSettings}>\n          <Transition\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n          </Transition>\n\n          <div className=\"fixed inset-0 overflow-y-auto\">\n            <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0 scale-95\"\n                enterTo=\"opacity-100 scale-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100 scale-100\"\n                leaveTo=\"opacity-0 scale-95\"\n              >\n                <DialogPanel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\n                  <DialogTitle className=\"text-lg font-medium leading-6 text-gray-900\">Camera Settings</DialogTitle>\n                  <div className=\"mt-4\">\n                    <label className=\"block text-sm font-medium text-gray-700\">Camera Mode</label>\n                    <select\n                      value={cameraMode}\n                      onChange={(e) => handleCameraModeChange(e.target.value as \"user\" | \"environment\")}\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                      aria-label=\"Select camera mode\"\n                    >\n                      <option value=\"user\">Front Camera</option>\n                      <option value=\"environment\">Rear Camera</option>\n                    </select>\n                  </div>\n\n                  <div className=\"mt-6\">\n                    <button\n                      type=\"button\"\n                      className=\"inline-flex justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white hover:bg-indigo-700\"\n                      onClick={toggleSettings}\n                    >\n                      Save Changes\n                    </button>\n                  </div>\n                </DialogPanel>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition>\n    </div>\n  )\n}\n\nfunction getProgressBarColorClass(score: number): string {\n  if (score >= 70) return \"bg-green-500\"\n  if (score >= 40) return \"bg-yellow-500\"\n  return \"bg-red-500\"\n}\n\nexport default Dashboard\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}