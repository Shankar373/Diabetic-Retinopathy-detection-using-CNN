{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/kasinadhsarma/dr-detection/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { Menu, X, Eye, Settings, FileText, Home, Layout, Bell, LogOut, User } from 'lucide-react';\nimport Image from 'next/image';\nimport { useAuth } from '@/contexts/AuthContext';\n\nexport function Header() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isProfileOpen, setIsProfileOpen] = useState(false);\n  const pathname = usePathname();\n  const { user, logout } = useAuth();\n\n  const publicNavigation = [\n    { name: 'Home', href: '/', icon: Home },\n    { name: 'About', href: '/about', icon: Info },\n    { name: 'Contact', href: '/contact', icon: Mail },\n  ];\n\n  const privateNavigation = [\n    { name: 'Dashboard', href: '/dashboard', icon: Layout },\n    { name: 'Analysis', href: '/analysis', icon: Eye },\n    { name: 'Results', href: '/results', icon: FileText },\n    { name: 'Settings', href: '/config', icon: Settings },\n  ];\n\n  const navigation = user ? privateNavigation : publicNavigation;\n\n  return (\n    <header className=\"bg-white shadow-sm\">\n      <nav className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\" aria-label=\"Top\">\n        <div className=\"flex h-16 items-center justify-between\">\n          <div className=\"flex items-center\">\n            <Link href=\"/\" className=\"flex items-center\">\n              <Image \n                src=\"/logo.png\" \n                alt=\"DR Detection\" \n                width={40} \n                height={40}\n                className=\"rounded-lg\"\n              />\n              <span className=\"ml-3 text-xl font-semibold text-gray-900\">\n                DR Detection\n              </span>\n            </Link>\n          </div>\n\n          {/* Desktop navigation */}\n          <div className=\"hidden md:flex md:items-center md:space-x-6\">\n            {navigation.map((item) => {\n              const Icon = item.icon;\n              return (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  className={`inline-flex items-center px-3 py-2 rounded-md text-sm font-medium transition-colors\n                    ${pathname === item.href\n                      ? 'text-blue-600 bg-blue-50'\n                      : 'text-gray-600 hover:text-blue-600 hover:bg-gray-50'\n                    }`}\n                >\n                  <Icon className=\"w-4 h-4 mr-2\" />\n                  {item.name}\n                </Link>\n              );\n            })}\n          </div>\n\n          {/* User menu & authentication */}\n          <div className=\"flex items-center gap-4\">\n            {user ? (\n              <>\n                <button\n                  type=\"button\"\n                  className=\"rounded-full p-2 text-gray-600 hover:bg-gray-50\"\n                >\n                  <Bell className=\"w-5 h-5\" />\n                </button>\n                \n                <div className=\"relative\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setIsProfileOpen(!isProfileOpen)}\n                    className=\"flex items-center text-sm rounded-full focus:outline-none\"\n                  >\n                    <Image\n                      src={user.image || \"/avatar-placeholder.png\"}\n                      alt={user.name}\n                      width={32}\n                      height={32}\n                      className=\"rounded-full\"\n                    />\n                  </button>\n\n                  {isProfileOpen && (\n                    <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1\">\n                      <div className=\"px-4 py-2 border-b\">\n                        <p className=\"text-sm font-medium text-gray-900\">{user.name}</p>\n                        <p className=\"text-xs text-gray-500\">{user.email}</p>\n                      </div>\n                      <Link\n                        href=\"/profile\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                      >\n                        <User className=\"w-4 h-4 inline mr-2\" />\n                        Profile\n                      </Link>\n                      <button\n                        onClick={() => logout()}\n                        className=\"block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50\"\n                      >\n                        <LogOut className=\"w-4 h-4 inline mr-2\" />\n                        Sign out\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </>\n            ) : (\n              <div className=\"flex items-center gap-4\">\n                <Link\n                  href=\"/login\"\n                  className=\"text-gray-600 hover:text-gray-900 px-3 py-2 text-sm font-medium\"\n                >\n                  Log in\n                </Link>\n                <Link\n                  href=\"/signup\"\n                  className=\"bg-blue-600 text-white hover:bg-blue-700 px-4 py-2 rounded-md text-sm font-medium\"\n                >\n                  Sign up\n                </Link>\n              </div>\n            )}\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"flex md:hidden\">\n            <button\n              type=\"button\"\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              className=\"text-gray-600 hover:text-gray-900\"\n            >\n              {isMenuOpen ? (\n                <X className=\"h-6 w-6\" />\n              ) : (\n                <Menu className=\"h-6 w-6\" />\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile menu */}\n        {isMenuOpen && (\n          <div className=\"md:hidden\">\n            <div className=\"space-y-1 pb-3 pt-2\">\n              {navigation.map((item) => {\n                const Icon = item.icon;\n                return (\n                  <Link\n                    key={item.name}\n                    href={item.href}\n                    className={`block px-3 py-2 rounded-md text-base font-medium ${\n                      pathname === item.href\n                        ? 'text-blue-600 bg-blue-50'\n                        : 'text-gray-600 hover:text-blue-600 hover:bg-gray-50'\n                    }`}\n                    onClick={() => setIsMenuOpen(false)}\n                  >\n                    <div className=\"flex items-center\">\n                      <Icon className=\"w-5 h-5 mr-3\" />\n                      {item.name}\n                    </div>\n                  </Link>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </nav>\n    </header>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}