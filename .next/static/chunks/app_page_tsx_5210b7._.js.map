{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/kasinadhsarma/dr-detection/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useRef } from 'react';\nimport Image from 'next/image';\nimport { \n  Upload, \n  Loader2, \n  AlertTriangle, \n  Info,\n  CheckCircle,\n  AlertCircle \n} from 'lucide-react';\nimport { Tooltip } from '../components/ui/tooltip';\nimport './styles/results.css';\n\ninterface AnalysisResult {\n  severity: string;\n  confidence: number;\n  severity_scores: Record<string, number>;\n  processing_time: number;\n}\n\nconst severityColors: Record<string, string> = {\n  'No DR': 'bg-green-100 text-green-800',\n  'Mild DR': 'bg-yellow-100 text-yellow-800',\n  'Moderate DR': 'bg-orange-100 text-orange-800',\n  'Severe DR': 'bg-red-100 text-red-800',\n  'Proliferative DR': 'bg-red-200 text-red-900'\n};\n\nconst CONFIDENCE_THRESHOLDS = {\n  HIGH: 70,\n  MODERATE: 50,\n  LOW: 30\n};\n\nconst getConfidenceLevel = (confidence: number): {color: string; message: string; icon: React.ReactNode} => {\n  if (confidence >= CONFIDENCE_THRESHOLDS.HIGH) return { \n    color: 'text-green-600',\n    message: 'High confidence prediction',\n    icon: <CheckCircle className=\"w-5 h-5\" />\n  };\n  if (confidence >= CONFIDENCE_THRESHOLDS.MODERATE) return { \n    color: 'text-yellow-600',\n    message: 'Moderate confidence - consider second opinion',\n    icon: <AlertCircle className=\"w-5 h-5\" />\n  };\n  return { \n    color: 'text-red-600',\n    message: 'Low confidence - results may not be reliable',\n    icon: <AlertTriangle className=\"w-5 h-5\" />\n  };\n};\n\nexport default function Home() {\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n  const [analyzing, setAnalyzing] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResult | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleImageSelect = async (file: File) => {\n    // Reset states\n    setError(null);\n    setAnalysisResult(null);\n\n    // Validate file type and size\n    if (!file.type.includes('image/')) {\n      setError('Please select a valid image file (JPEG, PNG)');\n      return;\n    }\n\n    if (file.size > 10 * 1024 * 1024) {\n      setError('Image size must be less than 10MB');\n      return;\n    }\n\n    try {\n      setSelectedImage(URL.createObjectURL(file));\n      setUploading(true);\n      setAnalyzing(true);\n      \n      const formData = new FormData();\n      formData.append('file', file);\n\n      const isDev = process.env.NEXT_PUBLIC_APP_ENV === 'development';\n      if (isDev) {\n        console.log('Running in development mode');\n      }\n\n      const response = await fetch('/api/analyze', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        console.error('Server response:', result);\n        throw new Error(result.error || `Server error: ${response.status}`);\n      }\n\n      if (result.success && result.result) {\n        setAnalysisResult(result.result);\n      } else {\n        throw new Error(result.error || 'Failed to analyze image');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error instanceof Error ? error.message : 'Error processing image');\n      setAnalysisResult(null);\n    } finally {\n      setUploading(false);\n      setAnalyzing(false);\n    }\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    if (file) handleImageSelect(file);\n  };\n\n  const formatConfidence = (confidence: number): string => {\n    return `${confidence.toFixed(1)}%`;\n  };\n\n  return (\n    <div className=\"min-h-screen p-8 bg-gray-50\">\n      <main className=\"max-w-4xl mx-auto\">\n        <header className=\"text-center mb-12\">\n          <h1 className=\"text-3xl font-bold mb-4\">Diabetic Retinopathy Detection</h1>\n          <p className=\"text-gray-600\">Upload a retinal image for automated DR screening</p>\n        </header>\n\n        <section className=\"bg-white p-8 rounded-lg shadow-lg\">\n          <div\n            className={`\n              border-2 border-dashed rounded-lg p-12 text-center transition-colors\n              ${error ? 'border-red-300 bg-red-50' : 'border-gray-300 hover:border-blue-400'}\n            `}\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n          >\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              className=\"hidden\"\n              ref={fileInputRef}\n              title=\"Select Image\"\n              onChange={(e) => e.target.files?.[0] && handleImageSelect(e.target.files[0])}\n            />\n            \n            {selectedImage ? (\n              <div className=\"space-y-4\">\n                <div className=\"relative h-64 w-full\">\n                  <Image\n                    src={selectedImage}\n                    alt=\"Selected retinal image\"\n                    fill\n                    className=\"object-contain rounded-lg\"\n                  />\n                </div>\n                <button \n                  className={`\n                    inline-flex items-center gap-2 px-6 py-3 rounded-full\n                    ${uploading \n                      ? 'bg-gray-400 cursor-not-allowed' \n                      : 'bg-blue-500 hover:bg-blue-600'\n                    } \n                    text-white font-medium transition-colors\n                  `}\n                  onClick={() => fileInputRef.current?.click()}\n                  disabled={uploading || analyzing}\n                >\n                  {uploading ? (\n                    <>\n                      <Loader2 className=\"w-5 h-5 animate-spin\" />\n                      <span>Processing...</span>\n                    </>\n                  ) : (\n                    <>\n                      <Upload className=\"w-5 h-5\" />\n                      <span>Select Another Image</span>\n                    </>\n                  )}\n                </button>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                <Upload className=\"w-12 h-12 mx-auto text-gray-400\" />\n                <div>\n                  <p className=\"text-gray-600\">\n                    Drag and drop your retinal image here, or click to select\n                  </p>\n                  <p className=\"text-sm text-gray-500 mt-2\">\n                    Supported formats: JPEG, PNG (max 10MB)\n                  </p>\n                </div>\n                <button \n                  className=\"inline-flex items-center gap-2 px-6 py-3 bg-blue-500 hover:bg-blue-600 text-white font-medium rounded-full transition-colors\"\n                  onClick={() => fileInputRef.current?.click()}\n                >\n                  <Upload className=\"w-5 h-5\" />\n                  <span>Select Image</span>\n                </button>\n              </div>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n              <div className=\"flex items-center gap-2 text-red-700\">\n                <AlertTriangle className=\"w-5 h-5\" />\n                <p>{error}</p>\n              </div>\n            </div>\n          )}\n\n          <div className=\"mt-8\">\n            <h2 className=\"text-xl font-semibold mb-4\">Analysis Results</h2>\n            <div className=\"p-6 bg-white rounded-lg shadow-sm\">\n              {analyzing ? (\n                <div className=\"flex items-center justify-center\">\n                  <p className=\"text-gray-700\">Analyzing image...</p>\n                </div>\n              ) : analysisResult ? (\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-gray-600\">Severity Level:</span>\n                    <div className=\"flex items-center gap-2\">\n                      <span className={`px-3 py-1 rounded-full text-sm font-medium ${severityColors[analysisResult.severity]}`}>\n                        {analysisResult.severity}\n                      </span>\n                      {analysisResult.confidence < CONFIDENCE_THRESHOLDS.MODERATE && (\n                        <Tooltip tooltip=\"Low confidence prediction\">\n                          <Info className=\"confidence-indicator\" />\n                        </Tooltip>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {/* Enhanced confidence display */}\n                  <div className=\"flex flex-col gap-2 p-4 rounded-lg bg-gray-50\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-gray-600\">Confidence:</span>\n                      <div className=\"flex items-center gap-2\">\n                        {getConfidenceLevel(analysisResult.confidence).icon}\n                        <span className={`font-medium ${getConfidenceLevel(analysisResult.confidence).color}`}>\n                          {formatConfidence(analysisResult.confidence)}\n                        </span>\n                      </div>\n                    </div>\n                    <p className={`text-sm ${getConfidenceLevel(analysisResult.confidence).color}`}>\n                      {getConfidenceLevel(analysisResult.confidence).message}\n                    </p>\n                  </div>\n\n                  {/* Update severity scores visualization */}\n                  {analysisResult.severity_scores && (\n                    <div className=\"mt-4 pt-4 border-t\">\n                      <h3 className=\"text-sm font-semibold text-gray-700 mb-4 flex items-center gap-2\">\n                        Detailed Scores\n                        <Tooltip tooltip=\"Confidence scores for each severity level\">\n                          <Info className=\"confidence-indicator\" />\n                        </Tooltip>\n                      </h3>\n                      <div className=\"space-y-3\">\n                        {Object.entries(analysisResult.severity_scores)\n                          .sort(([,a], [,b]) => b - a)\n                          .map(([level, score]) => (\n                            <div key={level} className=\"flex items-center gap-2\">\n                              <span className=\"score-label\">{level}:</span>\n                              <div className=\"progress-bar\">\n                                <div \n                                  className={`progress-bar-fill ${\n                                    score > CONFIDENCE_THRESHOLDS.HIGH \n                                      ? 'progress-bar-fill-high'\n                                      : score > CONFIDENCE_THRESHOLDS.MODERATE \n                                      ? 'progress-bar-fill-moderate'\n                                      : 'progress-bar-fill-low'\n                                  } w-progress-${Math.round((score / 100) * 4) * 25}`}\n                                />\n                              </div>\n                              <span className=\"score-value\">\n                                {formatConfidence(score)}\n                              </span>\n                            </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Enhanced recommendations */}\n                  {analysisResult.confidence < CONFIDENCE_THRESHOLDS.MODERATE && (\n                    <div className=\"mt-4 p-4 bg-yellow-50 rounded-lg border border-yellow-100\">\n                      <div className=\"flex gap-2 items-start text-yellow-800\">\n                        <AlertTriangle className=\"w-5 h-5 mt-0.5 flex-shrink-0\" />\n                        <div className=\"text-sm\">\n                          <p className=\"font-medium mb-2\">Due to the low confidence scores:</p>\n                          <ul className=\"list-disc ml-5 space-y-1\">\n                            <li>Consult with a healthcare professional for accurate diagnosis</li>\n                            <li>Consider retaking the image with better lighting and focus</li>\n                            <li>Use this result only as a preliminary screening tool</li>\n                            <li>Regular eye examinations are recommended for diabetic patients</li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <p className=\"text-gray-700 text-center\">\n                  {selectedImage ? 'Analysis complete' : 'No image analyzed yet'}\n                </p>\n              )}\n            </div>\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}